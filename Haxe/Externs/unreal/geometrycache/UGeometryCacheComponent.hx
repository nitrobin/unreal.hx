/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.geometrycache;


/**
  GeometryCacheComponent, encapsulates a GeometryCache asset instance and implements functionality for rendering/and playback of GeometryCaches
**/
@:glueCppIncludes("GeometryCacheComponent.h")
@:uextern extern class UGeometryCacheComponent extends unreal.UMeshComponent {
  
  /**
    Start playback of GeometryCache
  **/
  @:final public function Play() : Void;
  
  /**
    Start playback of GeometryCache from the start
  **/
  @:final public function PlayFromStart() : Void;
  
  /**
    Start playback of GeometryCache in reverse
  **/
  @:final public function PlayReversed() : Void;
  
  /**
    Start playback of GeometryCache from the end and play in reverse
  **/
  @:final public function PlayReversedFromEnd() : Void;
  
  /**
    Pause playback of GeometryCache
  **/
  @:final public function Pause() : Void;
  
  /**
    Stop playback of GeometryCache
  **/
  @:final public function Stop() : Void;
  
  /**
    Get whether this GeometryCache is playing or not.
  **/
  @:thisConst @:final public function IsPlaying() : Bool;
  
  /**
    Get whether this GeometryCache is playing in reverse or not.
  **/
  @:thisConst @:final public function IsPlayingReversed() : Bool;
  
  /**
    Get whether this GeometryCache is looping or not.
  **/
  @:thisConst @:final public function IsLooping() : Bool;
  
  /**
    Set whether this GeometryCache is looping or not.
  **/
  @:final public function SetLooping(bNewLooping : Bool) : Void;
  
  /**
    Get whether this GeometryCache is playing or not.
  **/
  @:thisConst @:final public function GetPlaybackSpeed() : unreal.Float32;
  
  /**
    Get whether this GeometryCache is playing or not.
  **/
  @:final public function SetPlaybackSpeed(NewPlaybackSpeed : unreal.Float32) : Void;
  
  /**
    Change the Geometry Cache used by this instance.
  **/
  public function SetGeometryCache(NewGeomCache : unreal.geometrycache.UGeometryCache) : Bool;
  private var ElapsedTime : unreal.Float32;
  private var NumTracks : unreal.Int32;
  private var PlaybackSpeed : unreal.Float32;
  private var StartTimeOffset : unreal.Float32;
  
  /**
    Geometry Cache instance referenced by the component
  **/
  public var GeometryCache : unreal.geometrycache.UGeometryCache;
  
}
