/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("AI/Navigation/NavigationTestingActor.h")
@:uextern extern class ANavigationTestingActor extends unreal.AActor implements unreal.INavAgentInterface implements unreal.INavPathObserverInterface {
  public var OffsetFromCornersDistance : unreal.Float32;
  public var ShowStepIndex : unreal.Int32;
  
  /**
    "None" will result in default filter being used
  **/
  public var FilterClass : unreal.TSubclassOf<unreal.UNavigationQueryFilter>;
  public var OtherActor : unreal.ANavigationTestingActor;
  public var PathfindingSteps : unreal.Int32;
  public var PathCost : unreal.Float32;
  
  /**
    Time in micro seconds
  **/
  public var PathfindingTime : unreal.Float32;
  public var bPathSearchOutOfNodes : Bool;
  public var bPathIsPartial : Bool;
  public var bPathExist : Bool;
  
  /**
    text canvas offset to apply
  **/
  public var TextCanvasOffset : unreal.FVector2D;
  
  /**
    determines which cost will be shown
  **/
  public var CostDisplayMode : unreal.ENavCostDisplay;
  public var bShouldBeVisibleInGame : Bool;
  
  /**
    show which nodes were modified in current A* step
  **/
  public var bShowDiffWithPreviousStep : Bool;
  
  /**
    show current best path
  **/
  public var bShowBestPath : Bool;
  
  /**
    show polys from open (orange) and closed (yellow) sets
  **/
  public var bShowNodePool : Bool;
  public var bDrawDistanceToWall : Bool;
  
  /**
    if set, all steps of A* algorithm will be accessible for debugging
  **/
  public var bGatherDetailedInfo : Bool;
  public var bUseHierarchicalPathfinding : Bool;
  public var bSearchStart : Bool;
  public var bProjectedLocationValid : Bool;
  public var ProjectedLocation : unreal.FVector;
  public var MyNavData : unreal.ANavigationData;
  public var QueryingExtent : unreal.FVector;
  
  /**
    @todo document
  **/
  public var NavAgentProps : unreal.FNavAgentProperties;
  public var bActAsNavigationInvoker : Bool;
  public var InvokerComponent : unreal.UNavigationInvokerComponent;
  #if WITH_EDITORONLY_DATA
  public var EdRenderComp : unreal.UNavTestRenderingComponent;
  #end // WITH_EDITORONLY_DATA
  public var CapsuleComponent : unreal.UCapsuleComponent;
  // NavAgentInterface interface implementation
  // NavPathObserverInterface interface implementation
  
}
