/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.headmounteddisplay;

@:umodule("HeadMountedDisplay")
@:glueCppIncludes("MotionControllerComponent.h")
@:uextern extern class UMotionControllerComponent extends unreal.UPrimitiveComponent {
  
  /**
    The tracking status for the device (e.g. full tracking, inertial tracking only, no tracking)
  **/
  public var CurrentTrackingStatus : unreal.headmounteddisplay.ETrackingStatus;
  
  /**
    If false, render transforms within the motion controller hierarchy will be updated a second time immediately before rendering.
  **/
  public var bDisableLowLatencyUpdate : Bool;
  
  /**
    Which hand this component should automatically follow
  **/
  public var Hand : unreal.inputcore.EControllerHand;
  
  /**
    Which player index this motion controller should automatically follow
  **/
  public var PlayerIndex : unreal.Int32;
  
  /**
    Whether or not this component had a valid tracked device this frame
  **/
  @:thisConst @:final public function IsTracked() : Bool;
  
}
