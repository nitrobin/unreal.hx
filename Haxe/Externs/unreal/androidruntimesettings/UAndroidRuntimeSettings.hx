/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.androidruntimesettings;


/**
  Implements the settings for the Android runtime platform.
**/
@:glueCppIncludes("AndroidRuntimeSettings.h")
@:uextern extern class UAndroidRuntimeSettings extends unreal.UObject {
  
  /**
    Priority for the ASTC texture format when launching on device or packaging using Android_Multi. The highest priority format supported by the device will be used. Default value is 0.9.
  **/
  public var TextureFormatPriority_ASTC : unreal.Float32;
  
  /**
    Priority for the ATC texture format when launching on device or packaging using Android_Multi. The highest priority format supported by the device will be used. Default value is 0.5.
  **/
  public var TextureFormatPriority_ATC : unreal.Float32;
  
  /**
    Priority for the PVRTC texture format when launching on device or packaging using Android_Multi. The highest priority format supported by the device will be used. Default value is 0.8.
  **/
  public var TextureFormatPriority_PVRTC : unreal.Float32;
  
  /**
    Priority for the DXT texture format when launching on device or packaging using Android_Multi. The highest priority format supported by the device will be used. Default value is 0.6.
  **/
  public var TextureFormatPriority_DXT : unreal.Float32;
  
  /**
    Priority for the ETC2 texture format when launching on device or packaging using Android_Multi. The highest priority format supported by the device will be used. Default value is 0.2.
  **/
  public var TextureFormatPriority_ETC2 : unreal.Float32;
  
  /**
    Priority for the ETC1 texture format when launching on device or packaging using Android_Multi. The highest priority format supported by the device will be used. Default value is 0.1.
  **/
  public var TextureFormatPriority_ETC1 : unreal.Float32;
  
  /**
    Include ASTC textures when packaging with the Android (Multi) variant.
  **/
  public var bMultiTargetFormat_ASTC : Bool;
  
  /**
    Include ATC textures when packaging with the Android (Multi) variant.
  **/
  public var bMultiTargetFormat_ATC : Bool;
  
  /**
    Include PVRTC textures when packaging with the Android (Multi) variant.
  **/
  public var bMultiTargetFormat_PVRTC : Bool;
  
  /**
    Include DXT textures when packaging with the Android (Multi) variant.
  **/
  public var bMultiTargetFormat_DXT : Bool;
  
  /**
    Include ETC2 textures when packaging with the Android (Multi) variant.
  **/
  public var bMultiTargetFormat_ETC2 : Bool;
  
  /**
    Include ETC1 textures when packaging with the Android (Multi) variant. ETC1 will be included if no other formats are selected.
  **/
  public var bMultiTargetFormat_ETC1 : Bool;
  
  /**
    Android Audio encoding options
  **/
  public var AndroidAudio : unreal.androidruntimesettings.EAndroidAudio;
  
  /**
    Show the launch image as a startup slash screen
  **/
  public var bShowLaunchImage : Bool;
  
  /**
    The unique identifier for this application (needed for IAP)
  **/
  public var GooglePlayLicenseKey : unreal.FString;
  
  /**
    Identifiers for ads obtained from AdMob
  **/
  public var AdMobAdUnitIDs : unreal.TArray<unreal.FString>;
  
  /**
    The unique identifier for the ad obtained from AdMob.
  **/
  public var AdMobAdUnitID : unreal.FString;
  
  /**
    Mapping of game leaderboard names to IDs generated by Google Play.
  **/
  public var LeaderboardMap : unreal.TArray<unreal.androidruntimesettings.FGooglePlayLeaderboardMapping>;
  
  /**
    Mapping of game achievement names to IDs generated by Google Play.
  **/
  public var AchievementMap : unreal.TArray<unreal.androidruntimesettings.FGooglePlayAchievementMapping>;
  
  /**
    The app id obtained from the Google Play Developer Console
  **/
  public var GamesAppID : unreal.FString;
  
  /**
    Should Google Play support be enabled?
  **/
  public var bEnableGooglePlaySupport : Bool;
  
  /**
    Enable Vulkan rendering support?
  **/
  public var bSupportsVulkan : Bool;
  
  /**
    Enable ES Deferred shading support? [CURRENTLY FOR FULL SOURCE GAMES ONLY. SUPPORTED BY NVIDIA K-1 AND X-1 ONLY.]
  **/
  public var bBuildForESDeferred : Bool;
  
  /**
    Enable ES3.1 support?
  **/
  public var bBuildForES31 : Bool;
  
  /**
    Enable ES2 support?
  **/
  public var bBuildForES2 : Bool;
  
  /**
    Enable x86-64 support? [CURRENTLY FOR FULL SOURCE GAMES ONLY]
  **/
  public var bBuildForX8664 : Bool;
  
  /**
    Enable x86 support? [CURRENTLY FOR FULL SOURCE GAMES ONLY]
  **/
  public var bBuildForX86 : Bool;
  
  /**
    Enable Arm64 support?
  **/
  public var bBuildForArm64 : Bool;
  
  /**
    Enable ArmV7 support? (this will be used if all type are unchecked)
  **/
  public var bBuildForArmV7 : Bool;
  
  /**
    This is the password for the key that you may have specified with keytool, if it's different from the keystore password. Leave blank to use same as Keystore
  **/
  public var KeyPassword : unreal.FString;
  
  /**
    This is the password that you specified FOR THE KEYSTORE NOT THE KEY, when running keytool (either with -storepass or by typing it in).
  **/
  public var KeyStorePassword : unreal.FString;
  
  /**
    This is the name of the key that you specified with the -alias parameter to keytool
  **/
  public var KeyAlias : unreal.FString;
  
  /**
    This is the file that keytool outputs, specified with the -keystore parameter (file should be in <Project>/Build/Android)
  **/
  public var KeyStore : unreal.FString;
  
  /**
    Configure the Android to run in sustained performance with lower max speeds, but no FPS fluctuations due to temperature
  **/
  public var bGoogleVRSustainedPerformance : Bool;
  
  /**
    Configure AndroidManifest.xml for Cardboard, Cardboard Advanced, or Daydream deployment. If running in Daydream-only mode, sustained performance and async reprojection are forced.
  **/
  public var GoogleVRMode : unreal.androidruntimesettings.EGoogleVRMode;
  
  /**
    Configure AndroidManifest.xml and Resrouces for Daydream
  **/
  public var bPackageForDaydream : Bool;
  
  /**
    Removes Oculus Signature Files (osig) from APK if GearVR APK signed for distribution and enables entitlement checker
  **/
  public var bRemoveOSIG : Bool;
  
  /**
    Configure AndroidManifest.xml for GearVR
  **/
  public var bPackageForGearVR : Bool;
  
  /**
    Any extra permissions your app needs (an optional file <Project>/Build/Android/ManifestRequirementsAdditions.txt will also be included,
    or an optional file <Project>/Build/Android/ManifestRequirementsOverride.txt will replace the entire <!-- Requirements --> section)
  **/
  public var ExtraPermissions : unreal.TArray<unreal.FString>;
  
  /**
    Any extra settings for the main <activity> section (an optional file <Project>/Build/Android/ManifestApplicationActivtyAdditions.txt will also be included)
  **/
  public var ExtraActivitySettings : unreal.FString;
  public var ExtraActivityNodeTags : unreal.TArray<unreal.FString>;
  
  /**
    Any extra tags for the com.epicgames.UE4.GameActivity <activity> node
    Any extra settings for the <application> section (an optional file <Project>/Build/Android/ManifestApplicationAdditions.txt will also be included)
  **/
  public var ExtraApplicationSettings : unreal.FString;
  
  /**
    Any extra tags for the <application> node
  **/
  public var ExtraApplicationNodeTags : unreal.TArray<unreal.FString>;
  
  /**
    Any extra tags for the <manifest> node
  **/
  public var ExtraManifestNodeTags : unreal.TArray<unreal.FString>;
  
  /**
    The preferred depth buffer bitcount for Android
  **/
  public var DepthBufferPreference : unreal.androidruntimesettings.EAndroidDepthBufferPreference;
  
  /**
    Should the software navigation buttons be hidden or not
  **/
  public var bFullScreen : Bool;
  
  /**
    Level of verbosity to use during packaging with Ant
  **/
  public var AntVerbosity : unreal.androidruntimesettings.EAndroidAntVerbosity;
  
  /**
    The permitted orientation of the application on the device
  **/
  public var Orientation : unreal.androidruntimesettings.EAndroidScreenOrientation;
  
  /**
    Disable the verification of an OBB file when it is downloaded or on first start when in a distribution build.
  **/
  public var bDisableVerifyOBBOnStartUp : Bool;
  
  /**
    If checked, both batch (.bat) files and shell script (.command) files will be generated, otherwise only done for the current system (default)
  **/
  public var bCreateAllPlatformsInstall : Bool;
  
  /**
    Should the data be placed into the .apk file instead of a separate .obb file. Amazon requires this to be enabled, but Google Play Store will not allow .apk files larger than 50MB, so only small games will work with this enabled.
  **/
  public var bPackageDataInsideApk : Bool;
  
  /**
    Preferred install location for the application
  **/
  public var InstallLocation : unreal.androidruntimesettings.EAndroidInstallLocation;
  
  /**
    What OS version the app is expected to run on (do not set this lower than 9, set to 19 for GearVR)
  **/
  public var TargetSDKVersion : unreal.Int32;
  
  /**
    What OS version the app is allowed to be installed on (do not set this lower than 9)
  **/
  public var MinSDKVersion : unreal.Int32;
  
  /**
    The visual version displayed for end users
  **/
  public var VersionDisplayName : unreal.FString;
  
  /**
    The visual application name displayed for end users
  **/
  public var ApplicationDisplayName : unreal.FString;
  
  /**
    The version number used to indicate newer versions in the Store
  **/
  public var StoreVersion : unreal.Int32;
  
  /**
    The official name of the product (same as the name you use on the Play Store web site). Note: Must have at least 2 sections separated by a period and be unique!
  **/
  public var PackageName : unreal.FString;
  
}
