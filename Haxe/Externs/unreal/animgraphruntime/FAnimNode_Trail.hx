/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.animgraphruntime;


/**
  Trail Controller
**/
@:umodule("AnimGraphRuntime")
@:glueCppIncludes("AnimGraphNode_Trail.h")
@:uextern extern class FAnimNode_Trail extends unreal.animgraphruntime.FAnimNode_SkeletalControlBase {
  
  /**
    Base Joint to calculate velocity from. If none, it will use Component's World Transform. .
  **/
  public var BaseJoint : unreal.FBoneReference;
  
  /**
    Whether 'fake' velocity should be applied in actor or world space.
  **/
  public var bActorSpaceFakeVel : Bool;
  
  /**
    'Fake' velocity applied to bones.
  **/
  public var FakeVelocity : unreal.FVector;
  
  /**
    If bLimitStretch is true, this indicates how long a bone can stretch beyond its length in the ref-pose.
  **/
  public var StretchLimit : unreal.Float32;
  
  /**
    Limit the amount that a bone can stretch from its ref-pose length.
  **/
  public var bLimitStretch : Bool;
  
  /**
    How quickly we 'relax' the bones to their animated positions. Time 0 will map to top root joint, time 1 will map to the bottom joint.
  **/
  public var TrailRelaxationSpeed : unreal.FRuntimeFloatCurve;
  
  /**
    How quickly we 'relax' the bones to their animated positions. Deprecated. Replaced to TrailRelaxationCurve
  **/
  @:deprecated public var TrailRelaxation_DEPRECATED : unreal.Float32;
  
  /**
    Invert the direction specified in ChainBoneAxis.
  **/
  public var bInvertChainBoneAxis : Bool;
  
  /**
    Axis of the bones to point along trail.
  **/
  public var ChainBoneAxis : unreal.EAxis;
  
  /**
    Number of bones above the active one in the hierarchy to modify. ChainLength should be at least 2.
  **/
  public var ChainLength : unreal.Int32;
  
  /**
    Reference to the active bone in the hierarchy to modify.
  **/
  public var TrailBone : unreal.FBoneReference;
  
}
