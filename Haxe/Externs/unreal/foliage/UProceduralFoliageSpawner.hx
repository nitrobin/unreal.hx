/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.foliage;

@:glueCppIncludes("ProceduralFoliageSpawner.h")
@:uextern extern class UProceduralFoliageSpawner extends unreal.UObject {
  
  /**
    Minimum size of the quad tree used during the simulation. Reduce if too many instances are in splittable leaf quads (as warned in the log).
  **/
  public var MinimumQuadTreeSize : unreal.Float32;
  
  /**
    The number of unique tiles to generate. The final simulation is a procedurally determined combination of the various unique tiles.
  **/
  public var NumUniqueTiles : unreal.Int32;
  
  /**
    Length of the tile (in cm) along one axis. The total area of the tile will be TileSize*TileSize.
  **/
  public var TileSize : unreal.Float32;
  
  /**
    The seed used for generating the randomness of the simulation.
  **/
  public var RandomSeed : unreal.Int32;
  @:final public function Simulate(NumSteps : unreal.Int32) : Void;
  
}
