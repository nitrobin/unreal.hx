/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplaytasks;

@:umodule("GameplayTasks")
@:glueCppIncludes("GameplayTask.h")
@:uextern extern class UGameplayTask extends unreal.UObject implements unreal.gameplaytasks.IGameplayTaskOwnerInterface {
  
  /**
    Called to trigger the actual task once the delegates have been set up
  **/
  @:final public function ReadyForActivation() : Void;
  
  /**
    Called explicitly to end the task (usually by the task itself). Calls OnDestroy.
        @NOTE: you need to call EndTask before sending out any "on completed" delegates.
        If you don't the task will still be in an "active" state while the event receivers may
        assume it's already "finished"
  **/
  @:final public function EndTask() : Void;
  
  /**
    child task instance
  **/
  private var ChildTask : unreal.gameplaytasks.UGameplayTask;
  
  /**
    This name allows us to find the task later so that we can end it.
  **/
  private var InstanceName : unreal.FName;
  // GameplayTaskOwnerInterface interface implementation
  
}
