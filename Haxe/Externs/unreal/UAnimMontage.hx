/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;


/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  * Any property you're adding to AnimMontage and parent class has to be considered for Child Asset
  *
  * Child Asset is considered to be only asset mapping feature using everything else in the class
  * For example, you can just use all parent's setting  for the montage, but only remap assets
  * This isn't magic bullet unfortunately and it is consistent effort of keeping the data synced with parent
  * If you add new property, please make sure those property has to be copied for children.
  * If it does, please add the copy in the function RefreshParentAssetData
**/
@:glueCppIncludes("Animation/AnimMontage.h")
@:uextern extern class UAnimMontage extends unreal.UAnimCompositeBase {
  
  /**
    Keep track of which AnimNotify_State are marked as BranchingPoints, so we can update their state when the Montage is ticked
  **/
  public var BranchingPointStateNotifyIndices : unreal.TArray<unreal.Int32>;
  #if WITH_EDITORONLY_DATA
  
  /**
    Preview Base pose for additive BlendSpace *
  **/
  public var PreviewBasePose : unreal.UAnimSequence;
  #end // WITH_EDITORONLY_DATA
  
  /**
    Root Bone will be locked to that position when extracting root motion. DEPRECATED in 4.5 root motion is controlled by anim sequences *
  **/
  public var RootMotionRootLock : unreal.ERootMotionRootLock;
  
  /**
    If this is on, it will allow extracting root motion rotation. DEPRECATED in 4.5 root motion is controlled by anim sequences *
  **/
  public var bEnableRootMotionRotation : Bool;
  
  /**
    If this is on, it will allow extracting root motion translation. DEPRECATED in 4.5 root motion is controlled by anim sequences *
  **/
  public var bEnableRootMotionTranslation : Bool;
  
  /**
    Remove this when VER_UE4_MONTAGE_BRANCHING_POINT_REMOVAL is removed.
  **/
  @:deprecated public var BranchingPoints_DEPRECATED : unreal.TArray<unreal.FBranchingPoint>;
  
  /**
    slot data, each slot contains anim track
  **/
  public var SlotAnimTracks : unreal.TArray<unreal.FSlotAnimationTrack>;
  
  /**
    composite section.
  **/
  public var CompositeSections : unreal.TArray<unreal.FCompositeSection>;
  public var MarkerData : unreal.FMarkerSyncData;
  
  /**
    wip: until we have UI working
  **/
  public var SyncSlotIndex : unreal.Int32;
  
  /**
    If you're using marker based sync for this montage, make sure to add sync group name. For now we only support one group
  **/
  public var SyncGroup : unreal.FName;
  
  /**
    Time from Sequence End to trigger blend out.
    <0 means using BlendOutTime, so BlendOut finishes as Montage ends.
    >=0 means using 'SequenceEnd - BlendOutTriggerTime' to trigger blend out.
  **/
  public var BlendOutTriggerTime : unreal.Float32;
  @:deprecated public var BlendOutTime_DEPRECATED : unreal.Float32;
  
  /**
    Blend out option. This is only used when it blends out itself. If it's interrupted by other montages, it will use new montage's BlendIn option to blend out.
  **/
  public var BlendOut : unreal.FAlphaBlend;
  @:deprecated public var BlendInTime_DEPRECATED : unreal.Float32;
  
  /**
    Blend in option.
  **/
  public var BlendIn : unreal.FAlphaBlend;
  
}
