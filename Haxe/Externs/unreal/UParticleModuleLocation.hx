/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Particles/Location/ParticleModuleLocation.h")
@:uextern extern class UParticleModuleLocation extends unreal.UParticleModuleLocationBase {
  
  /**
    When DistributeOverNPoints is set to a non-zero value, this specifies the ratio of particles spawned
    that should use the distribution.  (For example setting this to 1 will cause all the particles to
    be distributed evenly whereas .75 would cause 1/4 of the particles to be randomly placed).
  **/
  public var DistributeThreshold : unreal.Float32;
  
  /**
    When set to a non-zero value this will force the particles to only spawn on evenly distributed
    positions between the two points specified.
  **/
  public var DistributeOverNPoints : unreal.Float32;
  
  /**
    The location the particle should be emitted.
    Relative in local space to the emitter by default.
    Relative in world space as a WorldOffset module or when the emitter's UseLocalSpace is off.
    Retrieved using the EmitterTime at the spawn of the particle.
  **/
  public var StartLocation : unreal.FRawDistributionVector;
  
}
