/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;


/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:glueCppIncludes("Engine/NetConnection.h")
@:uextern extern class UNetConnection extends unreal.UPlayer {
  
  /**
    Internal.
  **/
  public var LastReceiveTime : unreal.Float64;
  
  /**
    Net id of remote player on this connection. Only valid on client connections (server side).
  **/
  public var PlayerId : unreal.FUniqueNetIdRepl;
  
  /**
    Maximum packet size.
  **/
  public var InternalAck : Bool;
  public var MaxPacket : unreal.Int32;
  
  /**
    Reference to controlling actor (usually PlayerController)
  **/
  public var OwningActor : unreal.AActor;
  
  /**
    The actor that is currently being viewed/controlled by the owning controller
  **/
  public var ViewTarget : unreal.AActor;
  
  /**
    @todo document
  **/
  public var SentTemporaries : unreal.TArray<unreal.AActor>;
  
  /**
    @todo document
  **/
  public var OpenChannels : unreal.TArray<unreal.UChannel>;
  
  /**
    Package map between local and remote. (negotiates net serialization)
  **/
  public var PackageMap : unreal.UPackageMap;
  
  /**
    Owning net driver
  **/
  public var Driver : unreal.UNetDriver;
  
  /**
    child connections for secondary viewports
  **/
  public var Children : unreal.TArray<unreal.UChildConnection>;
  
}
