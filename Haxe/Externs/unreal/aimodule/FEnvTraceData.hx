/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.aimodule;

@:glueCppIncludes("EnvironmentQuery/Generators/EnvQueryGenerator_ProjectedPoints.h")
@:uextern extern class FEnvTraceData {
  
  /**
    if set, editor show height up/down properties for projection
  **/
  public var bCanProjectDown : Bool;
  
  /**
    if set, editor will allow
  **/
  public var bCanDisableTrace : Bool;
  
  /**
    if set, editor will allow picking geometry trace
  **/
  public var bCanTraceOnGeometry : Bool;
  
  /**
    if set, editor will allow picking navmesh trace
  **/
  public var bCanTraceOnNavMesh : Bool;
  
  /**
    if set, trace will look only for blocking hits
  **/
  public var bOnlyBlockingHits : Bool;
  
  /**
    if set, trace will run on complex collisions
  **/
  public var bTraceComplex : Bool;
  
  /**
    shape used for geometry tracing
  **/
  public var TraceMode : unreal.aimodule.EEnvQueryTrace;
  
  /**
    shape used for geometry tracing
  **/
  public var TraceShape : unreal.aimodule.EEnvTraceShape;
  
  /**
    geometry trace channel for serialization purposes
  **/
  public var SerializedChannel : unreal.ECollisionChannel;
  
  /**
    geometry trace channel
  **/
  public var TraceChannel : unreal.ETraceTypeQuery;
  
  /**
    this value will be added to resulting location's Z axis. Can be useful when
        projecting points to navigation since navmesh is just an approximation of level
        geometry and items may end up being under collide-able geometry which would
        for example falsify visibility tests.
  **/
  public var PostProjectionVerticalOffset : unreal.Float32;
  
  /**
    shape parameter for trace
  **/
  public var ExtentZ : unreal.Float32;
  
  /**
    shape parameter for trace
  **/
  public var ExtentY : unreal.Float32;
  
  /**
    shape parameter for trace
  **/
  public var ExtentX : unreal.Float32;
  
  /**
    search height: above point
  **/
  public var ProjectUp : unreal.Float32;
  
  /**
    search height: below point
  **/
  public var ProjectDown : unreal.Float32;
  
  /**
    navigation filter for tracing
  **/
  public var NavigationFilter : unreal.TSubclassOf<unreal.UNavigationQueryFilter>;
  
  /**
    version number for updates
  **/
  public var VersionNum : unreal.Int32;
  
}
