/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.aimodule;

@:umodule("AIModule")
@:glueCppIncludes("EnvironmentQuery/Tests/EnvQueryTest_Overlap.h")
@:uextern extern class FEnvOverlapData {
  
  /**
    if set, overlap will run on complex collisions
  **/
  public var bOverlapComplex : Bool;
  
  /**
    if set, overlap will look only for blocking hits
  **/
  public var bOnlyBlockingHits : Bool;
  
  /**
    shape used for geometry overlap
  **/
  public var OverlapShape : unreal.aimodule.EEnvOverlapShape;
  
  /**
    geometry trace channel used for overlap
  **/
  public var OverlapChannel : unreal.ECollisionChannel;
  
  /**
    Offset from the item location at which to test the overlap.  For example, you may need to offset vertically to avoid overlaps with flat ground.
  **/
  public var ShapeOffset : unreal.FVector;
  
  /**
    shape parameter for overlap
  **/
  public var ExtentZ : unreal.Float32;
  
  /**
    shape parameter for overlap
  **/
  public var ExtentY : unreal.Float32;
  
  /**
    shape parameter for overlap
  **/
  public var ExtentX : unreal.Float32;
  
}
