/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.aimodule;

@:umodule("AIModule")
@:glueCppIncludes("EnvironmentQuery/EnvQueryManager.h")
@:uextern extern class UEnvQueryManager extends unreal.UObject {
  static public function RunEQSQuery(WorldContext : unreal.UObject, QueryTemplate : unreal.aimodule.UEnvQuery, Querier : unreal.UObject, RunMode : unreal.aimodule.EEnvQueryRunMode, WrapperClass : unreal.TSubclassOf<unreal.aimodule.UEnvQueryInstanceBlueprintWrapper>) : unreal.aimodule.UEnvQueryInstanceBlueprintWrapper;
  
  /**
    how often (in seconds) we will warn about the number of queries (allows us to catch multiple occurrences in a session)
  **/
  private var QueryCountWarningInterval : unreal.Float64;
  
  /**
    if greater than zero, we will warn once when the number of queries is greater than or equal to this number, and log the queries out
  **/
  private var QueryCountWarningThreshold : unreal.Int32;
  
  /**
    how long are we allowed to test per update, in seconds.
  **/
  private var MaxAllowedTestingTime : unreal.Float64;
  private var GCShieldedWrappers : unreal.TArray<unreal.aimodule.UEnvQueryInstanceBlueprintWrapper>;
  
  /**
    local cache of context objects for managing BP based objects
  **/
  private var LocalContexts : unreal.TArray<unreal.aimodule.UEnvQueryContext>;
  
  /**
    cache of instances
  **/
  private var InstanceCache : unreal.TArray<unreal.aimodule.FEnvQueryInstanceCache>;
  
}
