/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.editor;


/**
  WARNING: This type is defined as NoExport by UHT. It will be empty because of it
  
  Preview scene profile settings structure.
**/
@:umodule("UnrealEd")
@:glueCppIncludes("AssetViewerSettings.h")
@:noCopy @:noEquals @:uextern extern class FPreviewSceneProfile {
  
  /**
    Rotation for directional light
  **/
  public var DirectionalLightRotation : unreal.FRotator;
  
  /**
    Speed at which the sky rotates when rotating is toggled
  **/
  public var RotationSpeed : unreal.Float32;
  
  /**
    Current rotation value of the sky in degrees (0 - 360)
  **/
  public var LightingRigRotation : unreal.Float32;
  
  /**
    Whether or not the Post Processing should influence the scene
  **/
  public var bPostProcessingEnabled : Bool;
  
  /**
    Manual set post processing settings
  **/
  public var PostProcessingSettings : unreal.FPostProcessSettings;
  
  /**
    Storing path to environment cube to prevent it from getting cooked
  **/
  public var EnvironmentCubeMapPath : unreal.FString;
  
  /**
    Toggle visibility of the floor mesh
  **/
  public var bShowFloor : Bool;
  
  /**
    Toggle visibility of the environment sphere
  **/
  public var bShowEnvironment : Bool;
  
  /**
    Toggle rotating of the sky and directional lighting, press K and drag for manual rotating of Sky and L for Directional lighting
  **/
  public var bRotateLightingRig : Bool;
  
  /**
    Manually set the sky light intensity (0.0 - 20.0)
  **/
  public var SkyLightIntensity : unreal.Float32;
  
  /**
    Manually set the directional light colour
  **/
  public var DirectionalLightColor : unreal.FLinearColor;
  
  /**
    Manually set the directional light intensity (0.0 - 20.0)
  **/
  public var DirectionalLightIntensity : unreal.Float32;
  
  /**
    Name to identify the profile
  **/
  public var ProfileName : unreal.FString;
  
}
