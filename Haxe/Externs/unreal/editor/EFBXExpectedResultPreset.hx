/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.editor;


/**
  Import mesh type
**/
@:umodule("UnrealEd")
@:glueCppIncludes("Tests/FbxAutomationCommon.h")
@:uname("EFBXExpectedResultPreset")
@:uextern extern enum EFBXExpectedResultPreset {
  
  /**
    Data should contain the number of error [int0].
  **/
  Error_Number;
  
  /**
    Data should contain the number of warning [int0].
  **/
  Warning_Number;
  
  /**
    Data should contain the number of static mesh created [int0].
  **/
  Created_Staticmesh_Number;
  
  /**
    Data should contain the number of skeletal mesh created [int0].
  **/
  Created_Skeletalmesh_Number;
  
  /**
    Data should contain the number of Material created [int0] under the target content folder.
  **/
  Materials_Created_Number;
  
  /**
    Data should be the total number of vertex for all LOD [int0].
  **/
  Vertex_Number;
  
  /**
    Data should be the expected number of LOD [int0].
  **/
  Lod_Number;
  
  /**
    Data should be the LOD index [int0] and total number of vertex for lod [int1].
  **/
  Vertex_Number_Lod;
  
  /**
    Data should contain the number of Material indexed by the mesh [int0].
  **/
  Mesh_Materials_Number;
  
  /**
    Data should be the LOD index [int0] and the expected number of section for a mesh [int1].
  **/
  Mesh_LOD_Section_Number;
  
  /**
    Data should be the LOD index [int0], section index [int1] and the expected number of vertex [int2].
  **/
  Mesh_LOD_Section_Vertex_Number;
  
  /**
    Data should be the LOD index [int0], section index [int1] and the expected number of triangle [int2].
  **/
  Mesh_LOD_Section_Triangle_Number;
  
  /**
    Data should be the LOD index [int0], section index [int1] and the expected name of material [string0].
  **/
  Mesh_LOD_Section_Material_Name;
  
  /**
    Data should be the LOD index [int0], section index [int1] and the expected material index of mesh materials [int2].
  **/
  Mesh_LOD_Section_Material_Index;
  
  /**
    Data should be the LOD index [int0] and the number of UV channel [int1] for the specified LOD.
  **/
  LOD_UV_Channel_Number;
  
  /**
    Data should contain the number of bone created [int0].
  **/
  Bone_Number;
  
  /**
    Data should contain the bone index [int0] and a position xyz [float0 float1 float2] optionnaly you can pass a tolerance [float3].
  **/
  Bone_Position;
  
}
