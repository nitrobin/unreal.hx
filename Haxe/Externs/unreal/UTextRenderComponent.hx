/**
   *
   * WARNING! This file was autogenerated by:
   *  _   _ _____     ___   _   _ __   __
   * | | | |  ___|   /   | | | | |\ \ / /
   * | | | | |__    / /| | | |_| | \ V /
   * | | | |  __|  / /_| | |  _  | /   \
   * | |_| | |___  \___  | | | | |/ /^\ \
   *  \___/\____/      |_/ \_| |_/\/   \/
   *
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;


/**
  Renders text in the world with given font. Contains usual font related attributes such as Scale, Alignment, Color etc.
**/
@:glueCppIncludes("Components/TextRenderComponent.h")
@:uextern extern class UTextRenderComponent extends unreal.UPrimitiveComponent {

  /**
    Allows text to draw unmodified when using debug visualization modes. *
  **/
  public var bAlwaysRenderAsText : Bool;

  /**
    Horizontal adjustment per character, default is 0.0
  **/
  public var HorizSpacingAdjust : unreal.Float32;

  /**
    The inverse of the Font's character height.
  **/
  public var InvDefaultSize : unreal.Float32;

  /**
    Vertical size of the fonts largest character in world units. Transform, XScale and YScale will affect final size.
  **/
  public var WorldSize : unreal.Float32;

  /**
    Vertical scale, default is 1.0
  **/
  public var YScale : unreal.Float32;

  /**
    Horizontal scale, default is 1.0
  **/
  public var XScale : unreal.Float32;

  /**
    Color of the text, can be accessed as vertex color
  **/
  public var TextRenderColor : unreal.FColor;

  /**
    Vertical text alignment
  **/
  public var VerticalAlignment : unreal.EVerticalTextAligment;

  /**
    Horizontal text alignment
  **/
  public var HorizontalAlignment : unreal.EHorizTextAligment;

  /**
    Text font
  **/
  public var Font : unreal.UFont;

  /**
    Text material
  **/
  public var TextMaterial : unreal.UMaterialInterface;
  @:final public function SetText(Value : unreal.FText) : Void;

  /**
    Change the text material and signal the primitives to be rebuilt
  **/
  @:final public function SetTextMaterial(Material : unreal.UMaterialInterface) : Void;

  /**
    Change the font and signal the primitives to be rebuilt
  **/
  @:final public function SetFont(Value : unreal.UFont) : Void;

  /**
    Change the horizontal alignment and signal the primitives to be rebuilt
  **/
  @:final public function SetHorizontalAlignment(Value : unreal.EHorizTextAligment) : Void;

  /**
    Change the text render color and signal the primitives to be rebuilt
  **/
  @:final public function SetTextRenderColor(Value : unreal.FColor) : Void;

  /**
    Change the text X scale and signal the primitives to be rebuilt
  **/
  @:final public function SetXScale(Value : unreal.Float32) : Void;

  /**
    Change the text Y scale and signal the primitives to be rebuilt
  **/
  @:final public function SetYScale(Value : unreal.Float32) : Void;

  /**
    Change the text horizontal spacing adjustment and signal the primitives to be rebuilt
  **/
  @:final public function SetHorizSpacingAdjust(Value : unreal.Float32) : Void;

  /**
    Change the world size of the text and signal the primitives to be rebuilt
  **/
  @:final public function SetWorldSize(Value : unreal.Float32) : Void;

  /**
    Get local size of text
  **/
  @:thisConst @:final public function GetTextLocalSize() : unreal.FVector;

  /**
    Get world space size of text
  **/
  @:thisConst @:final public function GetTextWorldSize() : unreal.FVector;

}
