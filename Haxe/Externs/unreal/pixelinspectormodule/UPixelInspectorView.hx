/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.pixelinspectormodule;


/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:umodule("PixelInspectorModule")
@:glueCppIncludes("Private/PixelInspectorView.h")
@:uextern extern class UPixelInspectorView extends unreal.UObject {
  
  /**
    From the GBufferD A Channel.
  **/
  public var IrisDistance : unreal.Float32;
  
  /**
    From the GBufferD B Channel.
  **/
  public var IrisMask : unreal.Float32;
  
  /**
    From the GBufferD RG Channels.
  **/
  public var EyeTangent : unreal.FVector;
  
  /**
    From the GBufferD A Channel.
  **/
  public var Cloth : unreal.Float32;
  
  /**
    From the GBufferD B Channel.
  **/
  public var BackLit : unreal.Float32;
  
  /**
    From the GBufferD RG Channels.
  **/
  public var WorldNormal : unreal.FVector;
  
  /**
    From the GBufferD G Channel.
  **/
  public var ClearCoatRoughness : unreal.Float32;
  
  /**
    From the GBufferD R Channel.
  **/
  public var ClearCoat : unreal.Float32;
  
  /**
    From the GBufferD A Channel.
  **/
  public var Opacity : unreal.Float32;
  
  /**
    From the GBufferD RGB Channels.
  **/
  public var SubsurfaceProfile : unreal.FVector;
  
  /**
    From the GBufferD RGB Channels.
  **/
  public var SubSurfaceColor : unreal.FLinearColor;
  
  /**
    From the GBufferC A Channel encoded with IndirectIrradiance.
  **/
  public var AmbientOcclusion : unreal.Float32;
  
  /**
    From the GBufferC A Channel encoded with AmbientOcclusion.
  **/
  public var IndirectIrradiance : unreal.Float32;
  
  /**
    From the GBufferC RGB Channels.
  **/
  public var BaseColor : unreal.FLinearColor;
  
  /**
    From the GBufferB A Channel encoded with ShadingModel.
  **/
  public var SelectiveOutputMask : unreal.Int32;
  
  /**
    From the GBufferB A Channel encoded with SelectiveOutputMask.
  **/
  public var MaterialShadingModel : unreal.EMaterialShadingModel;
  
  /**
    From the GBufferB B Channel.
  **/
  public var Roughness : unreal.Float32;
  
  /**
    From the GBufferB G Channel.
  **/
  public var Specular : unreal.Float32;
  
  /**
    From the GBufferB R Channel.
  **/
  public var Metallic : unreal.Float32;
  
  /**
    From the GBufferA A Channel.
  **/
  public var PerObjectGBufferData : unreal.Float32;
  
  /**
    From the GBufferA RGB Channels.
  **/
  public var Normal : unreal.FVector;
  
  /**
    HDR RGB Color.
  **/
  public var HdrColor : unreal.FLinearColor;
  
  /**
    HDR Luminance.
  **/
  public var Luminance : unreal.Float32;
  
  /**
    HDR RGB Color.
  **/
  public var SceneColor : unreal.FLinearColor;
  
  /**
    Final RGBA 8bits Color after tone mapping, default value is black.
  **/
  public var FinalColor : unreal.FLinearColor;
  
}
