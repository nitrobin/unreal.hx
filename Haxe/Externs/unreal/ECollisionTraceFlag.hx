/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("PhysicsEngine/BodySetup.h")
@:uname("ECollisionTraceFlag")
@:uextern extern enum ECollisionTraceFlag {
  
  /**
    Use project physics settings (DefaultShapeComplexity)
    @DisplayName Project Default
  **/
  @DisplayName("Project Default")
  CTF_UseDefault;
  
  /**
    Create both simple and complex shapes. Simple shapes are used for regular scene queries and collision tests. Complex shape (per poly) is used for complex scene queries.
    @DisplayName Simple And Complex
  **/
  @DisplayName("Simple And Complex")
  CTF_UseSimpleAndComplex;
  
  /**
    Create only simple shapes. Use simple shapes for all scene queries and collision tests.
    @DisplayName Use Simple Collision As Complex
  **/
  @DisplayName("Use Simple Collision As Complex")
  CTF_UseSimpleAsComplex;
  
  /**
    Create only complex shapes (per poly). Use complex shapes for all scene queries and collision tests. Can be used in simulation for static shapes only (i.e can be collided against but not moved through forces or velocity.)
    @DisplayName Use Complex Collision As Simple
  **/
  @DisplayName("Use Complex Collision As Simple")
  CTF_UseComplexAsSimple;
  
}
