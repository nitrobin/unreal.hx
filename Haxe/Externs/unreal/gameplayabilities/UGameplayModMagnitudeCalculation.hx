/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;


/**
  Class used to perform custom gameplay effect modifier calculations, either via blueprint or native code
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("GameplayModMagnitudeCalculation.h")
@:uextern extern class UGameplayModMagnitudeCalculation extends unreal.gameplayabilities.UGameplayEffectCalculation {
  
  /**
    Calculate the base magnitude of the gameplay effect modifier, given the specified spec. Note that the owning spec def can still modify this base value
    with a coeffecient and pre/post multiply adds. see FCustomCalculationBasedFloat::CalculateMagnitude for details.
    
    @param Spec  Gameplay effect spec to use to calculate the magnitude with
    
    @return Computed magnitude of the modifier
  **/
  @:thisConst public function CalculateBaseMagnitude(Spec : unreal.Const<unreal.PRef<unreal.gameplayabilities.FGameplayEffectSpec>>) : unreal.Float32;
  
}
