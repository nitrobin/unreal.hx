/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;


/**
  A data driven table for applying gameplay effects based on tag count. This allows designers to map a
  "tag count" -> "response Gameplay Effect" relationship.
  
  For example, "for every count of "Status.Haste" I get 1 level of GE_Response_Haste. This class facilitates
  building this table and automatically registering and responding to tag events on the ability system component.
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("GameplayTagResponseTable.h")
@:uextern extern class UGameplayTagReponseTable extends unreal.UDataAsset {
  public var Entries : unreal.TArray<unreal.gameplayabilities.FGameplayTagResponseTableEntry>;
  @:final private function TagResponseEvent(Tag : unreal.Const<unreal.gameplaytags.FGameplayTag>, NewCount : unreal.Int32, ASC : unreal.gameplayabilities.UAbilitySystemComponent, idx : unreal.Int32) : Void;
  
}
