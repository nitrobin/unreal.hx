/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;


/**
  WARNING: This type is defined as NoExport by UHT. It will be empty because of it
  
  Structure to keep track of pending gameplay cues that haven't been applied yet.
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("GameplayCueManager.h")
@:noCopy @:noEquals @:uextern extern class FGameplayCuePendingExecute {
  
  /**
    Store the full cue parameters or just the effect context depending on type
  **/
  public var CueParameters : unreal.gameplayabilities.FGameplayCueParameters;
  
  /**
    If this cue is from a spec, here's the copy of that spec
  **/
  public var FromSpec : unreal.gameplayabilities.FGameplayEffectSpecForRPC;
  
  /**
    What component to send the cue on
  **/
  public var OwningComponent : unreal.gameplayabilities.UAbilitySystemComponent;
  
  /**
    What type of payload is attached to this cue
  **/
  public var PayloadType : unreal.gameplayabilities.EGameplayCuePayloadType;
  
  /**
    Prediction key that spawned this cue
  **/
  public var PredictionKey : unreal.gameplayabilities.FPredictionKey;
  
}
